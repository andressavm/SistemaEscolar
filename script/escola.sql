-- MySQL Script generated by MySQL Workbench
-- Seg 09 Jul 2018 11:20:19 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema escola
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema escola
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `escola` DEFAULT CHARACTER SET utf8 ;
USE `escola` ;

-- -----------------------------------------------------
-- Table `escola`.`pessoa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`pessoa` ;

CREATE TABLE IF NOT EXISTS `escola`.`pessoa` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Chave Primaria',
  `nome` VARCHAR(80) NULL COMMENT 'Campo para armazenar o nome da pessoa',
  `telefone` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `dataCadastro` DATETIME NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Tabela para armazenamernto dos dados principais das pessoas.';


-- -----------------------------------------------------
-- Table `escola`.`fisica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`fisica` ;

CREATE TABLE IF NOT EXISTS `escola`.`fisica` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cpf` VARCHAR(45) NULL,
  `rg` VARCHAR(45) NULL,
  `dataNascimento` DATE NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  `idPessoa` INT NOT NULL,
  PRIMARY KEY (`id`, `idPessoa`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC),
  INDEX `fk_fisica_pessoa_idx` (`idPessoa` ASC),
  CONSTRAINT `fk_fisica_pessoa`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `escola`.`pessoa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`juridica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`juridica` ;

CREATE TABLE IF NOT EXISTS `escola`.`juridica` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cnpj` VARCHAR(45) NULL,
  `inscricaoEstadual` VARCHAR(45) NULL,
  `estado` VARCHAR(45) NULL,
  `dataAbertura` DATE NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  `idPessoa` INT NOT NULL,
  PRIMARY KEY (`id`, `idPessoa`),
  UNIQUE INDEX `cnpj_UNIQUE` (`cnpj` ASC),
  UNIQUE INDEX `inscricaoEstadual_UNIQUE` (`inscricaoEstadual` ASC),
  INDEX `fk_juridica_pessoa1_idx` (`idPessoa` ASC),
  CONSTRAINT `fk_juridica_pessoa1`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `escola`.`pessoa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`aluno`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`aluno` ;

CREATE TABLE IF NOT EXISTS `escola`.`aluno` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cgm` VARCHAR(45) NULL,
  `idFisica` INT NOT NULL,
  `idPessoaFisica` INT NOT NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  PRIMARY KEY (`id`, `idFisica`, `idPessoaFisica`),
  INDEX `fk_aluno_fisica1_idx` (`idFisica` ASC, `idPessoaFisica` ASC),
  CONSTRAINT `fk_aluno_fisica1`
    FOREIGN KEY (`idFisica` , `idPessoaFisica`)
    REFERENCES `escola`.`fisica` (`id` , `idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`pedagoga`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`pedagoga` ;

CREATE TABLE IF NOT EXISTS `escola`.`pedagoga` (
  `id` INT NOT NULL,
  `formacao` VARCHAR(100) NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  `idFisica` INT NOT NULL,
  `idPessoaFisica` INT NOT NULL,
  PRIMARY KEY (`id`, `idFisica`, `idPessoaFisica`),
  INDEX `fk_pedagoga_fisica1_idx` (`idFisica` ASC, `idPessoaFisica` ASC),
  CONSTRAINT `fk_pedagoga_fisica1`
    FOREIGN KEY (`idFisica` , `idPessoaFisica`)
    REFERENCES `escola`.`fisica` (`id` , `idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`professor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`professor` ;

CREATE TABLE IF NOT EXISTS `escola`.`professor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `formacao` VARCHAR(100) NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  `idFisica` INT NOT NULL,
  `idPessoaFisica` INT NOT NULL,
  PRIMARY KEY (`id`, `idFisica`, `idPessoaFisica`),
  INDEX `fk_professor_fisica1_idx` (`idFisica` ASC, `idPessoaFisica` ASC),
  CONSTRAINT `fk_professor_fisica1`
    FOREIGN KEY (`idFisica` , `idPessoaFisica`)
    REFERENCES `escola`.`fisica` (`id` , `idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`curso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`curso` ;

CREATE TABLE IF NOT EXISTS `escola`.`curso` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(100) NULL,
  `tipoEnsino` VARCHAR(45) NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  `dataCadastro` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`turma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`turma` ;

CREATE TABLE IF NOT EXISTS `escola`.`turma` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NULL,
  `sala` VARCHAR(45) NULL,
  `ano` YEAR NULL,
  `dataCadastro` DATETIME NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  `idPedagoga` INT NOT NULL,
  `idFisicaPedagoga` INT NOT NULL,
  `idPessoaFisicaPedagoga` INT NOT NULL,
  PRIMARY KEY (`id`, `idPedagoga`, `idFisicaPedagoga`, `idPessoaFisicaPedagoga`),
  INDEX `fk_turma_pedagoga1_idx` (`idPedagoga` ASC, `idFisicaPedagoga` ASC, `idPessoaFisicaPedagoga` ASC),
  CONSTRAINT `fk_turma_pedagoga1`
    FOREIGN KEY (`idPedagoga` , `idFisicaPedagoga` , `idPessoaFisicaPedagoga`)
    REFERENCES `escola`.`pedagoga` (`id` , `idFisica` , `idPessoaFisica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`alunoCurso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`alunoCurso` ;

CREATE TABLE IF NOT EXISTS `escola`.`alunoCurso` (
  `idCurso` INT NOT NULL,
  `idAluno` INT NOT NULL,
  `idFisicaAluno` INT NOT NULL,
  `idPessoaFisicaAluno` INT NOT NULL,
  PRIMARY KEY (`idCurso`, `idAluno`, `idFisicaAluno`, `idPessoaFisicaAluno`),
  INDEX `fk_curso_has_aluno_aluno1_idx` (`idAluno` ASC, `idFisicaAluno` ASC, `idPessoaFisicaAluno` ASC),
  INDEX `fk_curso_has_aluno_curso1_idx` (`idCurso` ASC),
  CONSTRAINT `fk_curso_has_aluno_curso1`
    FOREIGN KEY (`idCurso`)
    REFERENCES `escola`.`curso` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_curso_has_aluno_aluno1`
    FOREIGN KEY (`idAluno` , `idFisicaAluno` , `idPessoaFisicaAluno`)
    REFERENCES `escola`.`aluno` (`id` , `idFisica` , `idPessoaFisica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`cursoTurma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`cursoTurma` ;

CREATE TABLE IF NOT EXISTS `escola`.`cursoTurma` (
  `idturma` INT NOT NULL,
  `idCurso` INT NOT NULL,
  `dataCadastro` DATETIME NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  PRIMARY KEY (`idturma`, `idCurso`),
  INDEX `fk_turma_has_curso_curso1_idx` (`idCurso` ASC),
  INDEX `fk_turma_has_curso_turma1_idx` (`idturma` ASC),
  CONSTRAINT `fk_turma_has_curso_turma1`
    FOREIGN KEY (`idturma`)
    REFERENCES `escola`.`turma` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_turma_has_curso_curso1`
    FOREIGN KEY (`idCurso`)
    REFERENCES `escola`.`curso` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`disciplina`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`disciplina` ;

CREATE TABLE IF NOT EXISTS `escola`.`disciplina` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(100) NULL,
  `area` VARCHAR(45) NULL,
  `dataCadastro` DATETIME NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `escola`.`professorTurma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `escola`.`professorTurma` ;

CREATE TABLE IF NOT EXISTS `escola`.`professorTurma` (
  `idTurma` INT NOT NULL,
  `idProfessor` INT NOT NULL,
  `idFisicaProfessor` INT NOT NULL,
  `idPessoaFisicaProfessor` INT NOT NULL,
  `dataCadastro` DATETIME NULL,
  `dataAtualizacao` TIMESTAMP NULL,
  `disciplina_id` INT NOT NULL,
  PRIMARY KEY (`idTurma`, `idProfessor`, `idFisicaProfessor`, `idPessoaFisicaProfessor`, `disciplina_id`),
  INDEX `fk_turma_has_professor_professor1_idx` (`idProfessor` ASC, `idFisicaProfessor` ASC, `idPessoaFisicaProfessor` ASC),
  INDEX `fk_turma_has_professor_turma1_idx` (`idTurma` ASC),
  INDEX `fk_professorTurma_disciplina1_idx` (`disciplina_id` ASC),
  CONSTRAINT `fk_turma_has_professor_turma1`
    FOREIGN KEY (`idTurma`)
    REFERENCES `escola`.`turma` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_turma_has_professor_professor1`
    FOREIGN KEY (`idProfessor` , `idFisicaProfessor` , `idPessoaFisicaProfessor`)
    REFERENCES `escola`.`professor` (`id` , `idFisica` , `idPessoaFisica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professorTurma_disciplina1`
    FOREIGN KEY (`disciplina_id`)
    REFERENCES `escola`.`disciplina` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
